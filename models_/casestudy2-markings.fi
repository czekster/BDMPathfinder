STEPS_ORDER
	__ARBRE__;
	default_step;
	check_priorities;
	initialization;
	propagate_effect_S;
	propagate_effect_detected;
	propagate_required_prob;
	propagate_effect_required;
	propagate_leaves;
	tops;
GROUP_NAMES
	simu_group;

OBJECT OPTIONS IS_A GLOBAL_TYPE;
	CONSTANT
	  trimming
		DOMAIN BOOLEAN
		= TRUE;
	  trimming_option
		DOMAIN 'according_to_article' 'maximum'
		= 'maximum';
	  enable_detection
		DOMAIN 'disabled' 'enabled' 'only_aa' 'ongoing_only' 'without_aposteriori' 'final_only'
		= 'disabled';
	  repairable_system
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  priority
		DOMAIN INTEGER
		REINITIALISATION 10;

OBJECT AA_1 IS_A aa_leaf;
	INTERFACE
	  fathers
		= OR_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  lambda_S_ND
		DOMAIN REAL
		= 0.000278;
	  lambda_S_D
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I
		DOMAIN REAL
		= 0;
	  lambda_D_O
		DOMAIN REAL
		= 0;
	  gamma_D_F
		DOMAIN REAL
		= 0;
	  lambda_D_A
		DOMAIN REAL
		= 0;
	  skill
		DOMAIN '0' '1' '2' '3' '4'
		= '0';
	  insider
		DOMAIN BOOLEAN
		= FALSE;
	  equipment
		DOMAIN BOOLEAN
		= FALSE;
	  cost
		DOMAIN REAL
		= 0;
	ATTRIBUTE
	  flagI
		DOMAIN BOOLEAN
		= FALSE;
	  flagF
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  aa_success
		LABEL "success of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF AA_1 <-- S OF AA_1;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF OR_1
		THEN required OF AA_1 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF OR_1 AND (NOT S OF OR_1)
		THEN relevant_evt OF AA_1 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF AA_1
		THEN final OF AA_1 <-- TRUE;
	  fails
		GROUP simu_group
		STEP initialization
		IF aa_success OF AA_1 = TRUE
		THEN S OF AA_1 <-- TRUE;
	  define_S
		GROUP simu_group
		STEP propagate_effect_S
		IF (aa_success OF AA_1 = TRUE) AND required OF AA_1
		THEN S OF AA_1 <-- TRUE;
	  set_final
		GROUP simu_group
		STEP initialization
		IF S OF AA_1
		THEN final OF AA_1 <-- TRUE;
	OCCURRENCE
	  success_undetected
		IF (aa_success OF AA_1 = FALSE) AND (((required OF AA_1 AND (
		  NOT detected OF AA_1)) AND (NOT S OF AA_1)) AND relevant_evt
		  OF AA_1)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success undetected of step %OBJECT"
		  DIST EXP (0.000278)
		  INDUCING aa_success OF AA_1 <-- TRUE;
	  success_detected
		IF (aa_success OF AA_1 = FALSE) AND (((required OF AA_1 AND
		  detected OF AA_1) AND (NOT S OF AA_1)) AND relevant_evt OF
		  AA_1)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING aa_success OF AA_1 <-- TRUE;

OBJECT AA_10 IS_A aa_leaf;
	INTERFACE
	  fathers
		= OR_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  lambda_S_ND
		DOMAIN REAL
		= 123.461;
	  lambda_S_D
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I
		DOMAIN REAL
		= 0;
	  lambda_D_O
		DOMAIN REAL
		= 0;
	  gamma_D_F
		DOMAIN REAL
		= 0;
	  lambda_D_A
		DOMAIN REAL
		= 0;
	  skill
		DOMAIN '0' '1' '2' '3' '4'
		= '0';
	  insider
		DOMAIN BOOLEAN
		= FALSE;
	  equipment
		DOMAIN BOOLEAN
		= FALSE;
	  cost
		DOMAIN REAL
		= 0;
	ATTRIBUTE
	  flagI
		DOMAIN BOOLEAN
		= FALSE;
	  flagF
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  aa_success
		LABEL "success of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF AA_10 <-- S OF AA_10;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF OR_1
		THEN required OF AA_10 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF OR_1 AND (NOT S OF OR_1)
		THEN relevant_evt OF AA_10 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF AA_10
		THEN final OF AA_10 <-- TRUE;
	  fails
		GROUP simu_group
		STEP initialization
		IF aa_success OF AA_10 = TRUE
		THEN S OF AA_10 <-- TRUE;
	  define_S
		GROUP simu_group
		STEP propagate_effect_S
		IF (aa_success OF AA_10 = TRUE) AND required OF AA_10
		THEN S OF AA_10 <-- TRUE;
	  set_final
		GROUP simu_group
		STEP initialization
		IF S OF AA_10
		THEN final OF AA_10 <-- TRUE;
	OCCURRENCE
	  success_undetected
		IF (aa_success OF AA_10 = FALSE) AND (((required OF AA_10 AND (
		  NOT detected OF AA_10)) AND (NOT S OF AA_10)) AND
		  relevant_evt OF AA_10)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success undetected of step %OBJECT"
		  DIST EXP (123.461)
		  INDUCING aa_success OF AA_10 <-- TRUE;
	  success_detected
		IF (aa_success OF AA_10 = FALSE) AND (((required OF AA_10 AND
		  detected OF AA_10) AND (NOT S OF AA_10)) AND relevant_evt OF
		  AA_10)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING aa_success OF AA_10 <-- TRUE;

OBJECT AA_2 IS_A aa_leaf;
	INTERFACE
	  fathers
		= AND_5;
	  triggered_by
		= TSE_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  lambda_S_ND
		DOMAIN REAL
		= 123.462;
	  lambda_S_D
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I
		DOMAIN REAL
		= 0;
	  lambda_D_O
		DOMAIN REAL
		= 0;
	  gamma_D_F
		DOMAIN REAL
		= 0;
	  lambda_D_A
		DOMAIN REAL
		= 0;
	  skill
		DOMAIN '0' '1' '2' '3' '4'
		= '0';
	  insider
		DOMAIN BOOLEAN
		= FALSE;
	  equipment
		DOMAIN BOOLEAN
		= FALSE;
	  cost
		DOMAIN REAL
		= 0;
	ATTRIBUTE
	  flagI
		DOMAIN BOOLEAN
		= FALSE;
	  flagF
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  aa_success
		LABEL "success of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF AA_2 <-- S OF AA_2;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF (NOT required OF AND_5) OR (NOT S OF TSE_1)
		THEN required OF AA_2 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF AND_5 AND (NOT S OF AND_5)
		THEN relevant_evt OF AA_2 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF AA_2
		THEN final OF AA_2 <-- TRUE;
	  fails
		GROUP simu_group
		STEP initialization
		IF aa_success OF AA_2 = TRUE
		THEN S OF AA_2 <-- TRUE;
	  define_S
		GROUP simu_group
		STEP propagate_effect_S
		IF (aa_success OF AA_2 = TRUE) AND required OF AA_2
		THEN S OF AA_2 <-- TRUE;
	  set_final
		GROUP simu_group
		STEP initialization
		IF S OF AA_2
		THEN final OF AA_2 <-- TRUE;
	OCCURRENCE
	  success_undetected
		IF (aa_success OF AA_2 = FALSE) AND (((required OF AA_2 AND (
		  NOT detected OF AA_2)) AND (NOT S OF AA_2)) AND relevant_evt
		  OF AA_2)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success undetected of step %OBJECT"
		  DIST EXP (123.462)
		  INDUCING aa_success OF AA_2 <-- TRUE;
	  success_detected
		IF (aa_success OF AA_2 = FALSE) AND (((required OF AA_2 AND
		  detected OF AA_2) AND (NOT S OF AA_2)) AND relevant_evt OF
		  AA_2)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING aa_success OF AA_2 <-- TRUE;

OBJECT AA_3 IS_A aa_leaf;
	INTERFACE
	  fathers
		= OR_4;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  lambda_S_ND
		DOMAIN REAL
		= 0.000278;
	  lambda_S_D
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I
		DOMAIN REAL
		= 0;
	  lambda_D_O
		DOMAIN REAL
		= 0;
	  gamma_D_F
		DOMAIN REAL
		= 0;
	  lambda_D_A
		DOMAIN REAL
		= 0;
	  skill
		DOMAIN '0' '1' '2' '3' '4'
		= '0';
	  insider
		DOMAIN BOOLEAN
		= FALSE;
	  equipment
		DOMAIN BOOLEAN
		= FALSE;
	  cost
		DOMAIN REAL
		= 0;
	ATTRIBUTE
	  flagI
		DOMAIN BOOLEAN
		= FALSE;
	  flagF
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  aa_success
		LABEL "success of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF AA_3 <-- S OF AA_3;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF OR_4
		THEN required OF AA_3 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF OR_4 AND (NOT S OF OR_4)
		THEN relevant_evt OF AA_3 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF AA_3
		THEN final OF AA_3 <-- TRUE;
	  fails
		GROUP simu_group
		STEP initialization
		IF aa_success OF AA_3 = TRUE
		THEN S OF AA_3 <-- TRUE;
	  define_S
		GROUP simu_group
		STEP propagate_effect_S
		IF (aa_success OF AA_3 = TRUE) AND required OF AA_3
		THEN S OF AA_3 <-- TRUE;
	  set_final
		GROUP simu_group
		STEP initialization
		IF S OF AA_3
		THEN final OF AA_3 <-- TRUE;
	OCCURRENCE
	  success_undetected
		IF (aa_success OF AA_3 = FALSE) AND (((required OF AA_3 AND (
		  NOT detected OF AA_3)) AND (NOT S OF AA_3)) AND relevant_evt
		  OF AA_3)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success undetected of step %OBJECT"
		  DIST EXP (0.000278)
		  INDUCING aa_success OF AA_3 <-- TRUE;
	  success_detected
		IF (aa_success OF AA_3 = FALSE) AND (((required OF AA_3 AND
		  detected OF AA_3) AND (NOT S OF AA_3)) AND relevant_evt OF
		  AA_3)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING aa_success OF AA_3 <-- TRUE;

OBJECT AA_4 IS_A aa_leaf;
	INTERFACE
	  fathers
		= OR_4;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  lambda_S_ND
		DOMAIN REAL
		= 0.000556;
	  lambda_S_D
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I
		DOMAIN REAL
		= 0;
	  lambda_D_O
		DOMAIN REAL
		= 0;
	  gamma_D_F
		DOMAIN REAL
		= 0;
	  lambda_D_A
		DOMAIN REAL
		= 0;
	  skill
		DOMAIN '0' '1' '2' '3' '4'
		= '0';
	  insider
		DOMAIN BOOLEAN
		= FALSE;
	  equipment
		DOMAIN BOOLEAN
		= FALSE;
	  cost
		DOMAIN REAL
		= 0;
	ATTRIBUTE
	  flagI
		DOMAIN BOOLEAN
		= FALSE;
	  flagF
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  aa_success
		LABEL "success of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF AA_4 <-- S OF AA_4;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF OR_4
		THEN required OF AA_4 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF OR_4 AND (NOT S OF OR_4)
		THEN relevant_evt OF AA_4 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF AA_4
		THEN final OF AA_4 <-- TRUE;
	  fails
		GROUP simu_group
		STEP initialization
		IF aa_success OF AA_4 = TRUE
		THEN S OF AA_4 <-- TRUE;
	  define_S
		GROUP simu_group
		STEP propagate_effect_S
		IF (aa_success OF AA_4 = TRUE) AND required OF AA_4
		THEN S OF AA_4 <-- TRUE;
	  set_final
		GROUP simu_group
		STEP initialization
		IF S OF AA_4
		THEN final OF AA_4 <-- TRUE;
	OCCURRENCE
	  success_undetected
		IF (aa_success OF AA_4 = FALSE) AND (((required OF AA_4 AND (
		  NOT detected OF AA_4)) AND (NOT S OF AA_4)) AND relevant_evt
		  OF AA_4)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success undetected of step %OBJECT"
		  DIST EXP (0.000556)
		  INDUCING aa_success OF AA_4 <-- TRUE;
	  success_detected
		IF (aa_success OF AA_4 = FALSE) AND (((required OF AA_4 AND
		  detected OF AA_4) AND (NOT S OF AA_4)) AND relevant_evt OF
		  AA_4)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING aa_success OF AA_4 <-- TRUE;

OBJECT AA_5 IS_A aa_leaf;
	INTERFACE
	  fathers
		= OR_4;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  lambda_S_ND
		DOMAIN REAL
		= 1.39e-05;
	  lambda_S_D
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I
		DOMAIN REAL
		= 0;
	  lambda_D_O
		DOMAIN REAL
		= 0;
	  gamma_D_F
		DOMAIN REAL
		= 0;
	  lambda_D_A
		DOMAIN REAL
		= 0;
	  skill
		DOMAIN '0' '1' '2' '3' '4'
		= '0';
	  insider
		DOMAIN BOOLEAN
		= FALSE;
	  equipment
		DOMAIN BOOLEAN
		= FALSE;
	  cost
		DOMAIN REAL
		= 0;
	ATTRIBUTE
	  flagI
		DOMAIN BOOLEAN
		= FALSE;
	  flagF
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  aa_success
		LABEL "success of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF AA_5 <-- S OF AA_5;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF OR_4
		THEN required OF AA_5 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF OR_4 AND (NOT S OF OR_4)
		THEN relevant_evt OF AA_5 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF AA_5
		THEN final OF AA_5 <-- TRUE;
	  fails
		GROUP simu_group
		STEP initialization
		IF aa_success OF AA_5 = TRUE
		THEN S OF AA_5 <-- TRUE;
	  define_S
		GROUP simu_group
		STEP propagate_effect_S
		IF (aa_success OF AA_5 = TRUE) AND required OF AA_5
		THEN S OF AA_5 <-- TRUE;
	  set_final
		GROUP simu_group
		STEP initialization
		IF S OF AA_5
		THEN final OF AA_5 <-- TRUE;
	OCCURRENCE
	  success_undetected
		IF (aa_success OF AA_5 = FALSE) AND (((required OF AA_5 AND (
		  NOT detected OF AA_5)) AND (NOT S OF AA_5)) AND relevant_evt
		  OF AA_5)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success undetected of step %OBJECT"
		  DIST EXP (1.39e-05)
		  INDUCING aa_success OF AA_5 <-- TRUE;
	  success_detected
		IF (aa_success OF AA_5 = FALSE) AND (((required OF AA_5 AND
		  detected OF AA_5) AND (NOT S OF AA_5)) AND relevant_evt OF
		  AA_5)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING aa_success OF AA_5 <-- TRUE;

OBJECT AA_6 IS_A aa_leaf;
	INTERFACE
	  fathers
		= AND_2;
	  triggered_by
		= TSE_3;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  lambda_S_ND
		DOMAIN REAL
		= 123.46;
	  lambda_S_D
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I
		DOMAIN REAL
		= 0;
	  lambda_D_O
		DOMAIN REAL
		= 0;
	  gamma_D_F
		DOMAIN REAL
		= 0;
	  lambda_D_A
		DOMAIN REAL
		= 0;
	  skill
		DOMAIN '0' '1' '2' '3' '4'
		= '0';
	  insider
		DOMAIN BOOLEAN
		= FALSE;
	  equipment
		DOMAIN BOOLEAN
		= FALSE;
	  cost
		DOMAIN REAL
		= 0;
	ATTRIBUTE
	  flagI
		DOMAIN BOOLEAN
		= FALSE;
	  flagF
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  aa_success
		LABEL "success of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF AA_6 <-- S OF AA_6;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF (NOT required OF AND_2) OR (NOT S OF TSE_3)
		THEN required OF AA_6 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF AND_2 AND (NOT S OF AND_2)
		THEN relevant_evt OF AA_6 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF AA_6
		THEN final OF AA_6 <-- TRUE;
	  fails
		GROUP simu_group
		STEP initialization
		IF aa_success OF AA_6 = TRUE
		THEN S OF AA_6 <-- TRUE;
	  define_S
		GROUP simu_group
		STEP propagate_effect_S
		IF (aa_success OF AA_6 = TRUE) AND required OF AA_6
		THEN S OF AA_6 <-- TRUE;
	  set_final
		GROUP simu_group
		STEP initialization
		IF S OF AA_6
		THEN final OF AA_6 <-- TRUE;
	OCCURRENCE
	  success_undetected
		IF (aa_success OF AA_6 = FALSE) AND (((required OF AA_6 AND (
		  NOT detected OF AA_6)) AND (NOT S OF AA_6)) AND relevant_evt
		  OF AA_6)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success undetected of step %OBJECT"
		  DIST EXP (123.46)
		  INDUCING aa_success OF AA_6 <-- TRUE;
	  success_detected
		IF (aa_success OF AA_6 = FALSE) AND (((required OF AA_6 AND
		  detected OF AA_6) AND (NOT S OF AA_6)) AND relevant_evt OF
		  AA_6)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING aa_success OF AA_6 <-- TRUE;

OBJECT AA_7 IS_A aa_leaf;
	INTERFACE
	  fathers
		= OR_6;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  lambda_S_ND
		DOMAIN REAL
		= 123.463;
	  lambda_S_D
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I
		DOMAIN REAL
		= 0;
	  lambda_D_O
		DOMAIN REAL
		= 0;
	  gamma_D_F
		DOMAIN REAL
		= 0;
	  lambda_D_A
		DOMAIN REAL
		= 0;
	  skill
		DOMAIN '0' '1' '2' '3' '4'
		= '0';
	  insider
		DOMAIN BOOLEAN
		= FALSE;
	  equipment
		DOMAIN BOOLEAN
		= FALSE;
	  cost
		DOMAIN REAL
		= 0;
	ATTRIBUTE
	  flagI
		DOMAIN BOOLEAN
		= FALSE;
	  flagF
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  aa_success
		LABEL "success of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF AA_7 <-- S OF AA_7;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF OR_6
		THEN required OF AA_7 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF OR_6 AND (NOT S OF OR_6)
		THEN relevant_evt OF AA_7 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF AA_7
		THEN final OF AA_7 <-- TRUE;
	  fails
		GROUP simu_group
		STEP initialization
		IF aa_success OF AA_7 = TRUE
		THEN S OF AA_7 <-- TRUE;
	  define_S
		GROUP simu_group
		STEP propagate_effect_S
		IF (aa_success OF AA_7 = TRUE) AND required OF AA_7
		THEN S OF AA_7 <-- TRUE;
	  set_final
		GROUP simu_group
		STEP initialization
		IF S OF AA_7
		THEN final OF AA_7 <-- TRUE;
	OCCURRENCE
	  success_undetected
		IF (aa_success OF AA_7 = FALSE) AND (((required OF AA_7 AND (
		  NOT detected OF AA_7)) AND (NOT S OF AA_7)) AND relevant_evt
		  OF AA_7)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success undetected of step %OBJECT"
		  DIST EXP (123.463)
		  INDUCING aa_success OF AA_7 <-- TRUE;
	  success_detected
		IF (aa_success OF AA_7 = FALSE) AND (((required OF AA_7 AND
		  detected OF AA_7) AND (NOT S OF AA_7)) AND relevant_evt OF
		  AA_7)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING aa_success OF AA_7 <-- TRUE;

OBJECT AA_8 IS_A aa_leaf;
	INTERFACE
	  fathers
		= OR_5;
	  triggered_by
		= TSE_2;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  lambda_S_ND
		DOMAIN REAL
		= 0.0001;
	  lambda_S_D
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I
		DOMAIN REAL
		= 0;
	  lambda_D_O
		DOMAIN REAL
		= 0;
	  gamma_D_F
		DOMAIN REAL
		= 0;
	  lambda_D_A
		DOMAIN REAL
		= 0;
	  skill
		DOMAIN '0' '1' '2' '3' '4'
		= '0';
	  insider
		DOMAIN BOOLEAN
		= FALSE;
	  equipment
		DOMAIN BOOLEAN
		= FALSE;
	  cost
		DOMAIN REAL
		= 0;
	ATTRIBUTE
	  flagI
		DOMAIN BOOLEAN
		= FALSE;
	  flagF
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  aa_success
		LABEL "success of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF AA_8 <-- S OF AA_8;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF (NOT required OF OR_5) OR (NOT S OF TSE_2)
		THEN required OF AA_8 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF OR_5 AND (NOT S OF OR_5)
		THEN relevant_evt OF AA_8 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF AA_8
		THEN final OF AA_8 <-- TRUE;
	  fails
		GROUP simu_group
		STEP initialization
		IF aa_success OF AA_8 = TRUE
		THEN S OF AA_8 <-- TRUE;
	  define_S
		GROUP simu_group
		STEP propagate_effect_S
		IF (aa_success OF AA_8 = TRUE) AND required OF AA_8
		THEN S OF AA_8 <-- TRUE;
	  set_final
		GROUP simu_group
		STEP initialization
		IF S OF AA_8
		THEN final OF AA_8 <-- TRUE;
	OCCURRENCE
	  success_undetected
		IF (aa_success OF AA_8 = FALSE) AND (((required OF AA_8 AND (
		  NOT detected OF AA_8)) AND (NOT S OF AA_8)) AND relevant_evt
		  OF AA_8)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success undetected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING aa_success OF AA_8 <-- TRUE;
	  success_detected
		IF (aa_success OF AA_8 = FALSE) AND (((required OF AA_8 AND
		  detected OF AA_8) AND (NOT S OF AA_8)) AND relevant_evt OF
		  AA_8)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING aa_success OF AA_8 <-- TRUE;

OBJECT AA_9 IS_A aa_leaf;
	INTERFACE
	  fathers
		= OR_3;
	  triggers
		= OR_6;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  lambda_S_ND
		DOMAIN REAL
		= 0.000278;
	  lambda_S_D
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I
		DOMAIN REAL
		= 0;
	  lambda_D_O
		DOMAIN REAL
		= 0;
	  gamma_D_F
		DOMAIN REAL
		= 0;
	  lambda_D_A
		DOMAIN REAL
		= 0;
	  skill
		DOMAIN '0' '1' '2' '3' '4'
		= '0';
	  insider
		DOMAIN BOOLEAN
		= FALSE;
	  equipment
		DOMAIN BOOLEAN
		= FALSE;
	  cost
		DOMAIN REAL
		= 0;
	ATTRIBUTE
	  flagI
		DOMAIN BOOLEAN
		= FALSE;
	  flagF
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  aa_success
		LABEL "success of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF AA_9 <-- S OF AA_9;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF OR_3
		THEN required OF AA_9 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF OR_3 AND (NOT S OF OR_3)) OR (relevant_evt
		  OF OR_6 AND (NOT S OF OR_6))
		THEN relevant_evt OF AA_9 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF AA_9
		THEN final OF AA_9 <-- TRUE;
	  fails
		GROUP simu_group
		STEP initialization
		IF aa_success OF AA_9 = TRUE
		THEN S OF AA_9 <-- TRUE;
	  define_S
		GROUP simu_group
		STEP propagate_effect_S
		IF (aa_success OF AA_9 = TRUE) AND required OF AA_9
		THEN S OF AA_9 <-- TRUE;
	  set_final
		GROUP simu_group
		STEP initialization
		IF S OF AA_9
		THEN final OF AA_9 <-- TRUE;
	OCCURRENCE
	  success_undetected
		IF (aa_success OF AA_9 = FALSE) AND (((required OF AA_9 AND (
		  NOT detected OF AA_9)) AND (NOT S OF AA_9)) AND relevant_evt
		  OF AA_9)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success undetected of step %OBJECT"
		  DIST EXP (0.000278)
		  INDUCING aa_success OF AA_9 <-- TRUE;
	  success_detected
		IF (aa_success OF AA_9 = FALSE) AND (((required OF AA_9 AND
		  detected OF AA_9) AND (NOT S OF AA_9)) AND relevant_evt OF
		  AA_9)
		MAY_OCCUR
		  FAULT aa_success
		  LABEL "success detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING aa_success OF AA_9 <-- TRUE;

OBJECT AND_1 IS_A and_gate;
	INTERFACE
	  sons
		= AND_2 AND_3 OR_3 OR_4;
	  fathers
		= UE_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF AND_1 <-- S OF AND_1;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF UE_1
		THEN required OF AND_1 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF UE_1 AND (NOT S OF UE_1)
		THEN relevant_evt OF AND_1 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF AND_1
		THEN final OF AND_1 <-- TRUE;
	  prop_fin
		GROUP simu_group
		STEP initialization
		IF final OF UE_1
		THEN final OF AND_1 <-- TRUE;
	  and
		GROUP simu_group
		STEP propagate_effect_S
		IF (((S OF AND_2 AND final OF AND_2) AND (S OF AND_3 AND final
		  OF AND_3)) AND (S OF OR_3 AND final OF OR_3)) AND (S OF OR_4
		  AND final OF OR_4)
		THEN S OF AND_1 <-- TRUE,
		  final OF AND_1 <-- TRUE;

OBJECT AND_2 IS_A and_gate;
	INTERFACE
	  sons
		= AA_6 OR_1 TSE_3;
	  fathers
		= AND_1;
	  triggers
		= OR_3;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF AND_2 <-- S OF AND_2;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF AND_1
		THEN required OF AND_2 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF AND_1 AND (NOT S OF AND_1)) OR (
		  relevant_evt OF OR_3 AND (NOT S OF OR_3))
		THEN relevant_evt OF AND_2 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF AND_2
		THEN final OF AND_2 <-- TRUE;
	  prop_fin
		GROUP simu_group
		STEP initialization
		IF final OF AND_1
		THEN final OF AND_2 <-- TRUE;
	  and
		GROUP simu_group
		STEP propagate_effect_S
		IF ((S OF AA_6 AND final OF AA_6) AND (S OF OR_1 AND final OF
		  OR_1)) AND (S OF TSE_3 AND final OF TSE_3)
		THEN S OF AND_2 <-- TRUE,
		  final OF AND_2 <-- TRUE;

OBJECT AND_3 IS_A and_gate;
	INTERFACE
	  sons
		= OR_5 OR_6;
	  fathers
		= AND_1;
	  triggered_by
		= OR_4;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF AND_3 <-- S OF AND_3;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF (NOT required OF AND_1) OR (NOT S OF OR_4)
		THEN required OF AND_3 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF AND_1 AND (NOT S OF AND_1)
		THEN relevant_evt OF AND_3 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF AND_3
		THEN final OF AND_3 <-- TRUE;
	  prop_fin
		GROUP simu_group
		STEP initialization
		IF final OF OR_4 AND final OF AND_1
		THEN final OF AND_3 <-- TRUE;
	  and
		GROUP simu_group
		STEP propagate_effect_S
		IF (S OF OR_5 AND final OF OR_5) AND (S OF OR_6 AND final OF
		  OR_6)
		THEN S OF AND_3 <-- TRUE,
		  final OF AND_3 <-- TRUE;

OBJECT AND_4 IS_A and_gate;
	INTERFACE
	  sons
		= ISE_1 TSE_2;
	  fathers
		= OR_5;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF AND_4 <-- S OF AND_4;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF OR_5
		THEN required OF AND_4 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF OR_5 AND (NOT S OF OR_5)
		THEN relevant_evt OF AND_4 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF AND_4
		THEN final OF AND_4 <-- TRUE;
	  prop_fin
		GROUP simu_group
		STEP initialization
		IF final OF OR_5
		THEN final OF AND_4 <-- TRUE;
	  and
		GROUP simu_group
		STEP propagate_effect_S
		IF (S OF ISE_1 AND final OF ISE_1) AND (S OF TSE_2 AND final OF
		  TSE_2)
		THEN S OF AND_4 <-- TRUE,
		  final OF AND_4 <-- TRUE;

OBJECT AND_5 IS_A and_gate;
	INTERFACE
	  sons
		= AA_2 TSE_1;
	  fathers
		= OR_3;
	  triggered_by
		= OR_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF AND_5 <-- S OF AND_5;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF (NOT required OF OR_3) OR (NOT S OF OR_1)
		THEN required OF AND_5 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF OR_3 AND (NOT S OF OR_3)
		THEN relevant_evt OF AND_5 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF AND_5
		THEN final OF AND_5 <-- TRUE;
	  prop_fin
		GROUP simu_group
		STEP initialization
		IF final OF OR_1 AND final OF OR_3
		THEN final OF AND_5 <-- TRUE;
	  and
		GROUP simu_group
		STEP propagate_effect_S
		IF (S OF AA_2 AND final OF AA_2) AND (S OF TSE_1 AND final OF
		  TSE_1)
		THEN S OF AND_5 <-- TRUE,
		  final OF AND_5 <-- TRUE;

OBJECT ISE_1 IS_A ise_leaf;
	INTERFACE
	  fathers
		= AND_4;
	  triggered_by
		= TSE_2;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  gamma_S_ND
		DOMAIN REAL
		= 0.3;
	  gamma_S_D
		DOMAIN REAL
		= 0.1;
	  gamma_D_NR
		DOMAIN REAL
		= 0;
	  gamma_D_R
		DOMAIN REAL
		= 0;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	ATTRIBUTE
	  flag
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  ise_nd_real
		LABEL "realization undetected of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	  ise_d_real
		LABEL "realization detected of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF ISE_1 <-- S OF ISE_1;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF (NOT required OF AND_4) OR (NOT S OF TSE_2)
		THEN required OF ISE_1 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF AND_4 AND (NOT S OF AND_4)
		THEN relevant_evt OF ISE_1 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF ISE_1
		THEN final OF ISE_1 <-- TRUE;
	  fails
		GROUP simu_group
		STEP initialization
		IF (ise_d_real OF ISE_1 = TRUE) OR (ise_nd_real OF ISE_1 = TRUE)
		THEN S OF ISE_1 <-- TRUE;
	  define_S
		GROUP simu_group
		STEP propagate_effect_S
		IF ((ise_d_real OF ISE_1 = TRUE) OR (ise_nd_real OF ISE_1 =
		  TRUE)) AND required OF ISE_1
		THEN S OF ISE_1 <-- TRUE;
	  set_final
		GROUP simu_group
		STEP initialization
		IF flag OF ISE_1
		THEN final OF ISE_1 <-- TRUE;
	OCCURRENCE
	  real_nd
		IF (ise_nd_real OF ISE_1 = FALSE) AND ((((((NOT detected OF
		  ISE_1) AND (NOT flag OF ISE_1)) AND (NOT S OF ISE_1)) AND
		  required OF ISE_1) AND relevant_evt OF ISE_1) AND (final OF
		  TSE_2 OR final OF AND_4))
		MAY_OCCUR
		  FAULT ise_nd_real
		  DIST INS (0.3)
		  INDUCING ise_nd_real OF ISE_1 <-- TRUE,
			flag OF ISE_1 <-- TRUE
		OR_ELSE
		  TRANSITION no_realization
		  LABEL "no realization undetected of step %OBJECT"
		  DIST INS (0.7)
		  INDUCING flag OF ISE_1 <-- TRUE;
	  real_d
		IF (ise_d_real OF ISE_1 = FALSE) AND (((((detected OF ISE_1 AND
		  (NOT flag OF ISE_1)) AND (NOT S OF ISE_1)) AND required OF
		  ISE_1) AND relevant_evt OF ISE_1) AND (final OF TSE_2 OR
		  final OF AND_4))
		MAY_OCCUR
		  FAULT ise_d_real
		  DIST INS (0.1)
		  INDUCING ise_d_real OF ISE_1 <-- TRUE,
			flag OF ISE_1 <-- TRUE
		OR_ELSE
		  TRANSITION no_realization
		  LABEL "no realization detected of step %OBJECT"
		  DIST INS (0.9)
		  INDUCING flag OF ISE_1 <-- TRUE;

OBJECT ISE_2 IS_A ise_leaf;
	INTERFACE
	  fathers
		= OR_6;
	  triggered_by
		= TSE_4;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  gamma_S_ND
		DOMAIN REAL
		= 123.464;
	  gamma_S_D
		DOMAIN REAL
		= 0.1;
	  gamma_D_NR
		DOMAIN REAL
		= 0;
	  gamma_D_R
		DOMAIN REAL
		= 0;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	ATTRIBUTE
	  flag
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  ise_nd_real
		LABEL "realization undetected of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	  ise_d_real
		LABEL "realization detected of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF ISE_2 <-- S OF ISE_2;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF (NOT required OF OR_6) OR (NOT S OF TSE_4)
		THEN required OF ISE_2 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF OR_6 AND (NOT S OF OR_6)
		THEN relevant_evt OF ISE_2 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF ISE_2
		THEN final OF ISE_2 <-- TRUE;
	  fails
		GROUP simu_group
		STEP initialization
		IF (ise_d_real OF ISE_2 = TRUE) OR (ise_nd_real OF ISE_2 = TRUE)
		THEN S OF ISE_2 <-- TRUE;
	  define_S
		GROUP simu_group
		STEP propagate_effect_S
		IF ((ise_d_real OF ISE_2 = TRUE) OR (ise_nd_real OF ISE_2 =
		  TRUE)) AND required OF ISE_2
		THEN S OF ISE_2 <-- TRUE;
	  set_final
		GROUP simu_group
		STEP initialization
		IF flag OF ISE_2
		THEN final OF ISE_2 <-- TRUE;
	OCCURRENCE
	  real_nd
		IF (ise_nd_real OF ISE_2 = FALSE) AND ((((((NOT detected OF
		  ISE_2) AND (NOT flag OF ISE_2)) AND (NOT S OF ISE_2)) AND
		  required OF ISE_2) AND relevant_evt OF ISE_2) AND (final OF
		  TSE_4 OR final OF OR_6))
		MAY_OCCUR
		  FAULT ise_nd_real
		  DIST INS (123.464)
		  INDUCING ise_nd_real OF ISE_2 <-- TRUE,
			flag OF ISE_2 <-- TRUE
		OR_ELSE
		  TRANSITION no_realization
		  LABEL "no realization undetected of step %OBJECT"
		  DIST INS (0.989899)
		  INDUCING flag OF ISE_2 <-- TRUE;
	  real_d
		IF (ise_d_real OF ISE_2 = FALSE) AND (((((detected OF ISE_2 AND
		  (NOT flag OF ISE_2)) AND (NOT S OF ISE_2)) AND required OF
		  ISE_2) AND relevant_evt OF ISE_2) AND (final OF TSE_4 OR
		  final OF OR_6))
		MAY_OCCUR
		  FAULT ise_d_real
		  DIST INS (0.1)
		  INDUCING ise_d_real OF ISE_2 <-- TRUE,
			flag OF ISE_2 <-- TRUE
		OR_ELSE
		  TRANSITION no_realization
		  LABEL "no realization detected of step %OBJECT"
		  DIST INS (0.9)
		  INDUCING flag OF ISE_2 <-- TRUE;

OBJECT OR_1 IS_A or_gate;
	INTERFACE
	  sons
		= AA_1 AA_10;
	  fathers
		= AND_2;
	  triggers
		= AND_5;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF OR_1 <-- S OF OR_1;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF AND_2
		THEN required OF OR_1 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF AND_2 AND (NOT S OF AND_2)) OR (
		  relevant_evt OF AND_5 AND (NOT S OF AND_5))
		THEN relevant_evt OF OR_1 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF OR_1
		THEN final OF OR_1 <-- TRUE;
	  prop_fin
		GROUP simu_group
		STEP initialization
		IF final OF AND_2
		THEN final OF OR_1 <-- TRUE;
	  or
		GROUP simu_group
		STEP propagate_effect_S
		IF (S OF AA_1 AND final OF AA_1) OR (S OF AA_10 AND final OF
		  AA_10)
		THEN S OF OR_1 <-- TRUE,
		  final OF OR_1 <-- TRUE;

OBJECT OR_3 IS_A or_gate;
	INTERFACE
	  sons
		= AA_9 AND_5;
	  fathers
		= AND_1;
	  triggered_by
		= AND_2;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF OR_3 <-- S OF OR_3;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF (NOT required OF AND_1) OR (NOT S OF AND_2)
		THEN required OF OR_3 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF AND_1 AND (NOT S OF AND_1)
		THEN relevant_evt OF OR_3 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF OR_3
		THEN final OF OR_3 <-- TRUE;
	  prop_fin
		GROUP simu_group
		STEP initialization
		IF final OF AND_2 AND final OF AND_1
		THEN final OF OR_3 <-- TRUE;
	  or
		GROUP simu_group
		STEP propagate_effect_S
		IF (S OF AA_9 AND final OF AA_9) OR (S OF AND_5 AND final OF
		  AND_5)
		THEN S OF OR_3 <-- TRUE,
		  final OF OR_3 <-- TRUE;

OBJECT OR_4 IS_A or_gate;
	INTERFACE
	  sons
		= AA_3 AA_4 AA_5;
	  fathers
		= AND_1;
	  triggers
		= AND_3;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF OR_4 <-- S OF OR_4;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF AND_1
		THEN required OF OR_4 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF AND_1 AND (NOT S OF AND_1)) OR (
		  relevant_evt OF AND_3 AND (NOT S OF AND_3))
		THEN relevant_evt OF OR_4 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF OR_4
		THEN final OF OR_4 <-- TRUE;
	  prop_fin
		GROUP simu_group
		STEP initialization
		IF final OF AND_1
		THEN final OF OR_4 <-- TRUE;
	  or
		GROUP simu_group
		STEP propagate_effect_S
		IF ((S OF AA_3 AND final OF AA_3) OR (S OF AA_4 AND final OF
		  AA_4)) OR (S OF AA_5 AND final OF AA_5)
		THEN S OF OR_4 <-- TRUE,
		  final OF OR_4 <-- TRUE;

OBJECT OR_5 IS_A or_gate;
	INTERFACE
	  sons
		= AA_8 AND_4;
	  fathers
		= AND_3;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF OR_5 <-- S OF OR_5;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF AND_3
		THEN required OF OR_5 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF AND_3 AND (NOT S OF AND_3)
		THEN relevant_evt OF OR_5 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF OR_5
		THEN final OF OR_5 <-- TRUE;
	  prop_fin
		GROUP simu_group
		STEP initialization
		IF final OF AND_3
		THEN final OF OR_5 <-- TRUE;
	  or
		GROUP simu_group
		STEP propagate_effect_S
		IF (S OF AA_8 AND final OF AA_8) OR (S OF AND_4 AND final OF
		  AND_4)
		THEN S OF OR_5 <-- TRUE,
		  final OF OR_5 <-- TRUE;

OBJECT OR_6 IS_A or_gate;
	INTERFACE
	  sons
		= AA_7 ISE_2 TSE_4;
	  fathers
		= AND_3;
	  triggered_by
		= AA_9;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF OR_6 <-- S OF OR_6;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF (NOT required OF AND_3) OR (NOT S OF AA_9)
		THEN required OF OR_6 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF relevant_evt OF AND_3 AND (NOT S OF AND_3)
		THEN relevant_evt OF OR_6 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF OR_6
		THEN final OF OR_6 <-- TRUE;
	  prop_fin
		GROUP simu_group
		STEP initialization
		IF final OF AA_9 AND final OF AND_3
		THEN final OF OR_6 <-- TRUE;
	  or
		GROUP simu_group
		STEP propagate_effect_S
		IF ((S OF AA_7 AND final OF AA_7) OR (S OF ISE_2 AND final OF
		  ISE_2)) OR (S OF TSE_4 AND final OF TSE_4)
		THEN S OF OR_6 <-- TRUE,
		  final OF OR_6 <-- TRUE;

OBJECT TSE_1 IS_A tse_leaf;
	INTERFACE
	  fathers
		= AND_5;
	  triggers
		= AA_2;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  lambda_S_ND
		DOMAIN REAL
		= 123.457;
	  lambda_S_D
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I
		DOMAIN REAL
		= 0;
	  lambda_D_O
		DOMAIN REAL
		= 0;
	  gamma_D_F
		DOMAIN REAL
		= 0;
	  lambda_D_A
		DOMAIN REAL
		= 0;
	  lambda_S_ND_idle
		DOMAIN REAL
		= 0.0001;
	  lambda_S_D_idle
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I_idle
		DOMAIN REAL
		= 0;
	  lambda_D_O_idle
		DOMAIN REAL
		= 0;
	  gamma_D_F_idle
		DOMAIN REAL
		= 0;
	  lambda_D_A_idle
		DOMAIN REAL
		= 0;
	ATTRIBUTE
	  flagI
		DOMAIN BOOLEAN
		= FALSE;
	  flagF
		DOMAIN BOOLEAN
		= FALSE;
	  flagIi
		DOMAIN BOOLEAN
		= FALSE;
	  flagFi
		DOMAIN BOOLEAN
		= FALSE;
	  active
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  tse_real
		LABEL "realization of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF TSE_1 <-- S OF TSE_1;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF AND_5
		THEN required OF TSE_1 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF AND_5 AND (NOT S OF AND_5)) OR (
		  relevant_evt OF AA_2 AND (NOT S OF AA_2))
		THEN relevant_evt OF TSE_1 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF TSE_1
		THEN final OF TSE_1 <-- TRUE;
	  fails
		GROUP simu_group
		STEP initialization
		IF tse_real OF TSE_1 = TRUE
		THEN S OF TSE_1 <-- TRUE;
	  define_S
		GROUP simu_group
		STEP propagate_effect_S
		IF (tse_real OF TSE_1 = TRUE) AND required OF TSE_1
		THEN S OF TSE_1 <-- TRUE;
	  activation
		GROUP simu_group
		STEP tops
		IF required OF TSE_1
		THEN active OF TSE_1 <-- TRUE;
	  set_final
		GROUP simu_group
		STEP initialization
		IF S OF TSE_1
		THEN final OF TSE_1 <-- TRUE;
	OCCURRENCE
	  success_undetected
		IF (tse_real OF TSE_1 = FALSE) AND ((((required OF TSE_1 AND (
		  NOT detected OF TSE_1)) AND (NOT S OF TSE_1)) AND active OF
		  TSE_1) AND relevant_evt OF TSE_1)
		MAY_OCCUR
		  FAULT tse_real
		  LABEL "realization undetected of step %OBJECT"
		  DIST EXP (123.457)
		  INDUCING tse_real OF TSE_1 <-- TRUE;
	  success_detected
		IF (tse_real OF TSE_1 = FALSE) AND ((((required OF TSE_1 AND
		  detected OF TSE_1) AND (NOT S OF TSE_1)) AND active OF TSE_1)
		   AND relevant_evt OF TSE_1)
		MAY_OCCUR
		  FAULT tse_real
		  LABEL "realization detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING tse_real OF TSE_1 <-- TRUE;
	  success_undetected_idle
		IF (tse_real OF TSE_1 = FALSE) AND (((((NOT required OF TSE_1)
		  AND (NOT detected OF TSE_1)) AND relevant_evt OF TSE_1) AND (
		  NOT S OF TSE_1)) AND active OF TSE_1)
		MAY_OCCUR
		  FAULT tse_real
		  LABEL "idle realization undetected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING tse_real OF TSE_1 <-- TRUE;
	  success_detected_idle
		IF (tse_real OF TSE_1 = FALSE) AND (((((NOT required OF TSE_1)
		  AND detected OF TSE_1) AND relevant_evt OF TSE_1) AND (NOT S
		  OF TSE_1)) AND active OF TSE_1)
		MAY_OCCUR
		  FAULT tse_real
		  LABEL "idle realization detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING tse_real OF TSE_1 <-- TRUE;

OBJECT TSE_2 IS_A tse_leaf;
	INTERFACE
	  fathers
		= AND_4;
	  triggers
		= AA_8 ISE_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  lambda_S_ND
		DOMAIN REAL
		= 123.458;
	  lambda_S_D
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I
		DOMAIN REAL
		= 0;
	  lambda_D_O
		DOMAIN REAL
		= 0;
	  gamma_D_F
		DOMAIN REAL
		= 0;
	  lambda_D_A
		DOMAIN REAL
		= 0;
	  lambda_S_ND_idle
		DOMAIN REAL
		= 0.0001;
	  lambda_S_D_idle
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I_idle
		DOMAIN REAL
		= 0;
	  lambda_D_O_idle
		DOMAIN REAL
		= 0;
	  gamma_D_F_idle
		DOMAIN REAL
		= 0;
	  lambda_D_A_idle
		DOMAIN REAL
		= 0;
	ATTRIBUTE
	  flagI
		DOMAIN BOOLEAN
		= FALSE;
	  flagF
		DOMAIN BOOLEAN
		= FALSE;
	  flagIi
		DOMAIN BOOLEAN
		= FALSE;
	  flagFi
		DOMAIN BOOLEAN
		= FALSE;
	  active
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  tse_real
		LABEL "realization of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF TSE_2 <-- S OF TSE_2;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF AND_4
		THEN required OF TSE_2 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF AND_4 AND (NOT S OF AND_4)) OR ((
		  relevant_evt OF AA_8 AND (NOT S OF AA_8)) OR (relevant_evt
		  OF ISE_1 AND (NOT S OF ISE_1)))
		THEN relevant_evt OF TSE_2 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF TSE_2
		THEN final OF TSE_2 <-- TRUE;
	  fails
		GROUP simu_group
		STEP initialization
		IF tse_real OF TSE_2 = TRUE
		THEN S OF TSE_2 <-- TRUE;
	  define_S
		GROUP simu_group
		STEP propagate_effect_S
		IF (tse_real OF TSE_2 = TRUE) AND required OF TSE_2
		THEN S OF TSE_2 <-- TRUE;
	  activation
		GROUP simu_group
		STEP tops
		IF required OF TSE_2
		THEN active OF TSE_2 <-- TRUE;
	  set_final
		GROUP simu_group
		STEP initialization
		IF S OF TSE_2
		THEN final OF TSE_2 <-- TRUE;
	OCCURRENCE
	  success_undetected
		IF (tse_real OF TSE_2 = FALSE) AND ((((required OF TSE_2 AND (
		  NOT detected OF TSE_2)) AND (NOT S OF TSE_2)) AND active OF
		  TSE_2) AND relevant_evt OF TSE_2)
		MAY_OCCUR
		  FAULT tse_real
		  LABEL "realization undetected of step %OBJECT"
		  DIST EXP (123.458)
		  INDUCING tse_real OF TSE_2 <-- TRUE;
	  success_detected
		IF (tse_real OF TSE_2 = FALSE) AND ((((required OF TSE_2 AND
		  detected OF TSE_2) AND (NOT S OF TSE_2)) AND active OF TSE_2)
		   AND relevant_evt OF TSE_2)
		MAY_OCCUR
		  FAULT tse_real
		  LABEL "realization detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING tse_real OF TSE_2 <-- TRUE;
	  success_undetected_idle
		IF (tse_real OF TSE_2 = FALSE) AND (((((NOT required OF TSE_2)
		  AND (NOT detected OF TSE_2)) AND relevant_evt OF TSE_2) AND (
		  NOT S OF TSE_2)) AND active OF TSE_2)
		MAY_OCCUR
		  FAULT tse_real
		  LABEL "idle realization undetected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING tse_real OF TSE_2 <-- TRUE;
	  success_detected_idle
		IF (tse_real OF TSE_2 = FALSE) AND (((((NOT required OF TSE_2)
		  AND detected OF TSE_2) AND relevant_evt OF TSE_2) AND (NOT S
		  OF TSE_2)) AND active OF TSE_2)
		MAY_OCCUR
		  FAULT tse_real
		  LABEL "idle realization detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING tse_real OF TSE_2 <-- TRUE;

OBJECT TSE_3 IS_A tse_leaf;
	INTERFACE
	  fathers
		= AND_2;
	  triggers
		= AA_6;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  lambda_S_ND
		DOMAIN REAL
		= 123.456;
	  lambda_S_D
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I
		DOMAIN REAL
		= 0;
	  lambda_D_O
		DOMAIN REAL
		= 0;
	  gamma_D_F
		DOMAIN REAL
		= 0;
	  lambda_D_A
		DOMAIN REAL
		= 0;
	  lambda_S_ND_idle
		DOMAIN REAL
		= 0.0001;
	  lambda_S_D_idle
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I_idle
		DOMAIN REAL
		= 0;
	  lambda_D_O_idle
		DOMAIN REAL
		= 0;
	  gamma_D_F_idle
		DOMAIN REAL
		= 0;
	  lambda_D_A_idle
		DOMAIN REAL
		= 0;
	ATTRIBUTE
	  flagI
		DOMAIN BOOLEAN
		= FALSE;
	  flagF
		DOMAIN BOOLEAN
		= FALSE;
	  flagIi
		DOMAIN BOOLEAN
		= FALSE;
	  flagFi
		DOMAIN BOOLEAN
		= FALSE;
	  active
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  tse_real
		LABEL "realization of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF TSE_3 <-- S OF TSE_3;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF AND_2
		THEN required OF TSE_3 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF AND_2 AND (NOT S OF AND_2)) OR (
		  relevant_evt OF AA_6 AND (NOT S OF AA_6))
		THEN relevant_evt OF TSE_3 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF TSE_3
		THEN final OF TSE_3 <-- TRUE;
	  fails
		GROUP simu_group
		STEP initialization
		IF tse_real OF TSE_3 = TRUE
		THEN S OF TSE_3 <-- TRUE;
	  define_S
		GROUP simu_group
		STEP propagate_effect_S
		IF (tse_real OF TSE_3 = TRUE) AND required OF TSE_3
		THEN S OF TSE_3 <-- TRUE;
	  activation
		GROUP simu_group
		STEP tops
		IF required OF TSE_3
		THEN active OF TSE_3 <-- TRUE;
	  set_final
		GROUP simu_group
		STEP initialization
		IF S OF TSE_3
		THEN final OF TSE_3 <-- TRUE;
	OCCURRENCE
	  success_undetected
		IF (tse_real OF TSE_3 = FALSE) AND ((((required OF TSE_3 AND (
		  NOT detected OF TSE_3)) AND (NOT S OF TSE_3)) AND active OF
		  TSE_3) AND relevant_evt OF TSE_3)
		MAY_OCCUR
		  FAULT tse_real
		  LABEL "realization undetected of step %OBJECT"
		  DIST EXP (123.456)
		  INDUCING tse_real OF TSE_3 <-- TRUE;
	  success_detected
		IF (tse_real OF TSE_3 = FALSE) AND ((((required OF TSE_3 AND
		  detected OF TSE_3) AND (NOT S OF TSE_3)) AND active OF TSE_3)
		   AND relevant_evt OF TSE_3)
		MAY_OCCUR
		  FAULT tse_real
		  LABEL "realization detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING tse_real OF TSE_3 <-- TRUE;
	  success_undetected_idle
		IF (tse_real OF TSE_3 = FALSE) AND (((((NOT required OF TSE_3)
		  AND (NOT detected OF TSE_3)) AND relevant_evt OF TSE_3) AND (
		  NOT S OF TSE_3)) AND active OF TSE_3)
		MAY_OCCUR
		  FAULT tse_real
		  LABEL "idle realization undetected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING tse_real OF TSE_3 <-- TRUE;
	  success_detected_idle
		IF (tse_real OF TSE_3 = FALSE) AND (((((NOT required OF TSE_3)
		  AND detected OF TSE_3) AND relevant_evt OF TSE_3) AND (NOT S
		  OF TSE_3)) AND active OF TSE_3)
		MAY_OCCUR
		  FAULT tse_real
		  LABEL "idle realization detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING tse_real OF TSE_3 <-- TRUE;

OBJECT TSE_4 IS_A tse_leaf;
	INTERFACE
	  fathers
		= OR_6;
	  triggers
		= ISE_2;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= FALSE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  lambda_S_ND
		DOMAIN REAL
		= 123.459;
	  lambda_S_D
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I
		DOMAIN REAL
		= 0;
	  lambda_D_O
		DOMAIN REAL
		= 0;
	  gamma_D_F
		DOMAIN REAL
		= 0;
	  lambda_D_A
		DOMAIN REAL
		= 0;
	  lambda_S_ND_idle
		DOMAIN REAL
		= 0.0001;
	  lambda_S_D_idle
		DOMAIN REAL
		= 0.0001;
	  gamma_D_I_idle
		DOMAIN REAL
		= 0;
	  lambda_D_O_idle
		DOMAIN REAL
		= 0;
	  gamma_D_F_idle
		DOMAIN REAL
		= 0;
	  lambda_D_A_idle
		DOMAIN REAL
		= 0;
	ATTRIBUTE
	  flagI
		DOMAIN BOOLEAN
		= FALSE;
	  flagF
		DOMAIN BOOLEAN
		= FALSE;
	  flagIi
		DOMAIN BOOLEAN
		= FALSE;
	  flagFi
		DOMAIN BOOLEAN
		= FALSE;
	  active
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  tse_real
		LABEL "realization of step %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF TSE_4 <-- S OF TSE_4;
	  prop_req
		GROUP simu_group
		STEP propagate_effect_required
		IF NOT required OF OR_6
		THEN required OF TSE_4 <-- FALSE;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF OR_6 AND (NOT S OF OR_6)) OR (relevant_evt
		  OF ISE_2 AND (NOT S OF ISE_2))
		THEN relevant_evt OF TSE_4 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF TSE_4
		THEN final OF TSE_4 <-- TRUE;
	  fails
		GROUP simu_group
		STEP initialization
		IF tse_real OF TSE_4 = TRUE
		THEN S OF TSE_4 <-- TRUE;
	  define_S
		GROUP simu_group
		STEP propagate_effect_S
		IF (tse_real OF TSE_4 = TRUE) AND required OF TSE_4
		THEN S OF TSE_4 <-- TRUE;
	  activation
		GROUP simu_group
		STEP tops
		IF required OF TSE_4
		THEN active OF TSE_4 <-- TRUE;
	  set_final
		GROUP simu_group
		STEP initialization
		IF S OF TSE_4
		THEN final OF TSE_4 <-- TRUE;
	OCCURRENCE
	  success_undetected
		IF (tse_real OF TSE_4 = FALSE) AND ((((required OF TSE_4 AND (
		  NOT detected OF TSE_4)) AND (NOT S OF TSE_4)) AND active OF
		  TSE_4) AND relevant_evt OF TSE_4)
		MAY_OCCUR
		  FAULT tse_real
		  LABEL "realization undetected of step %OBJECT"
		  DIST EXP (123.459)
		  INDUCING tse_real OF TSE_4 <-- TRUE;
	  success_detected
		IF (tse_real OF TSE_4 = FALSE) AND ((((required OF TSE_4 AND
		  detected OF TSE_4) AND (NOT S OF TSE_4)) AND active OF TSE_4)
		   AND relevant_evt OF TSE_4)
		MAY_OCCUR
		  FAULT tse_real
		  LABEL "realization detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING tse_real OF TSE_4 <-- TRUE;
	  success_undetected_idle
		IF (tse_real OF TSE_4 = FALSE) AND (((((NOT required OF TSE_4)
		  AND (NOT detected OF TSE_4)) AND relevant_evt OF TSE_4) AND (
		  NOT S OF TSE_4)) AND active OF TSE_4)
		MAY_OCCUR
		  FAULT tse_real
		  LABEL "idle realization undetected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING tse_real OF TSE_4 <-- TRUE;
	  success_detected_idle
		IF (tse_real OF TSE_4 = FALSE) AND (((((NOT required OF TSE_4)
		  AND detected OF TSE_4) AND relevant_evt OF TSE_4) AND (NOT S
		  OF TSE_4)) AND active OF TSE_4)
		MAY_OCCUR
		  FAULT tse_real
		  LABEL "idle realization detected of step %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING tse_real OF TSE_4 <-- TRUE;

OBJECT UE_1 IS_A undes_event;
	INTERFACE
	  sons
		= AND_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  detected
		DOMAIN BOOLEAN
		= FALSE;
	  final
		DOMAIN BOOLEAN
		= TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  detection
		DOMAIN 'disabled' 'global' 'local'
		= 'global';
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= TRUE;
	  transmit_relevance
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  mem_S
		GROUP simu_group
		STEP propagate_leaves
		THEN already_S OF UE_1 <-- S OF UE_1;
	  prop_rel
		GROUP simu_group
		STEP propagate_effect_required
		THEN relevant_evt OF UE_1 <-- TRUE;
	  prop_final
		GROUP simu_group
		STEP initialization
		IF detected OF UE_1
		THEN final OF UE_1 <-- TRUE;
	  final_S
		STEP propagate_effect_S
		IF S OF AND_1
		THEN S OF UE_1 <-- TRUE;
	  final_det
		STEP propagate_effect_detected
		IF detected OF AND_1
		THEN detected OF UE_1 <-- TRUE;

OBJECT logic_1 IS_A logic_link;

OBJECT logic_10 IS_A logic_link;

OBJECT logic_11 IS_A logic_link;

OBJECT logic_12 IS_A logic_link;

OBJECT logic_13 IS_A logic_link;

OBJECT logic_14 IS_A logic_link;

OBJECT logic_15 IS_A logic_link;

OBJECT logic_16 IS_A logic_link;

OBJECT logic_17 IS_A logic_link;

OBJECT logic_18 IS_A logic_link;

OBJECT logic_19 IS_A logic_link;

OBJECT logic_2 IS_A logic_link;

OBJECT logic_20 IS_A logic_link;

OBJECT logic_21 IS_A logic_link;

OBJECT logic_22 IS_A logic_link;

OBJECT logic_23 IS_A logic_link;

OBJECT logic_24 IS_A logic_link;

OBJECT logic_25 IS_A logic_link;

OBJECT logic_26 IS_A logic_link;

OBJECT logic_3 IS_A logic_link;

OBJECT logic_4 IS_A logic_link;

OBJECT logic_5 IS_A logic_link;

OBJECT logic_6 IS_A logic_link;

OBJECT logic_7 IS_A logic_link;

OBJECT logic_8 IS_A logic_link;

OBJECT logic_9 IS_A logic_link;

OBJECT t_1 IS_A trigger_link;
	INTERFACE
	  target
		= OR_3;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_2 IS_A trigger_link;
	INTERFACE
	  target
		= AND_5;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_3 IS_A trigger_link;
	INTERFACE
	  target
		= OR_6;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_4 IS_A trigger_link;
	INTERFACE
	  target
		= AND_3;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_5 IS_A trigger_link;
	INTERFACE
	  target
		= AA_2;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_6 IS_A trigger_link;
	INTERFACE
	  target
		= ISE_1;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_7 IS_A trigger_link;
	INTERFACE
	  target
		= AA_8;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_8 IS_A trigger_link;
	INTERFACE
	  target
		= ISE_2;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_9 IS_A trigger_link;
	INTERFACE
	  target
		= AA_6;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT __ARBRE__EIRM IS_A FIGARO;
	CONSTANT
	  Profil1
		DOMAIN BOOLEAN
		= TRUE;

